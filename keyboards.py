#keyboards.py
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import InlineKeyboardMarkup

def main_menu():
    """
    –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞.
    """
    builder = InlineKeyboardBuilder()
    builder.button(text="üå§Ô∏è –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑", callback_data="open_forecast_menu")
    builder.button(text="üìç –£–∫–∞–∑–∞—Ç—å –≥–æ—Ä–æ–¥", callback_data="set_city")
    builder.button(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="open_settings")
    builder.adjust(1)  # –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–∏–Ω —Å—Ç–æ–ª–±–µ—Ü
    return builder.as_markup()

def forecast_menu():
    """
    –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞ –ø—Ä–æ–≥–Ω–æ–∑–∞.
    """
    builder = InlineKeyboardBuilder()
    builder.button(text="üå§Ô∏è –°–µ–π—á–∞—Å", callback_data="get_weather_now")
    # –ò–∑-–∑–∞ —Ç–æ–≥–æ —á—Ç–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π API –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 2 –¥–Ω—è –≤–ø–µ—Ä–µ–¥, —è –≤—ã–Ω—É–∂–¥–µ–Ω –ø–æ–º–µ–Ω—è—Ç—å –∫–Ω–æ–ø–∫–∏
    # builder.button(text="üå§Ô∏è –ù–∞ –∑–∞–≤—Ç—Ä–∞", callback_data="get_tomorrow_weather")
    # builder.button(text="üå§Ô∏è –ù–∞ 3 –¥–Ω—è", callback_data="get_weather_3days")
    builder.button(text="üå§Ô∏è –ù–∞ 2 –¥–Ω—è", callback_data="get_weather_2days")
    builder.button(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")
    builder.adjust(1)  # –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–∏–Ω —Å—Ç–æ–ª–±–µ—Ü
    return builder.as_markup()

def settings_menu():
    """
    –ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫.
    """
    builder = InlineKeyboardBuilder()
    builder.button(text="üîî –†–∞—Å—Å—ã–ª–∫–∞: –í–∫–ª/–í—ã–∫–ª", callback_data="toggle_mailing")
    builder.button(text="üî§ –ü–µ—Ä–µ–≤–æ–¥: –í–∫–ª/–í—ã–∫–ª", callback_data="toggle_translation")
    builder.button(text="üí∏ –ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ", callback_data="support")
    builder.button(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")
    builder.adjust(1)  # –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–∏–Ω —Å—Ç–æ–ª–±–µ—Ü
    return builder.as_markup()

def city_keyboard():
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞.
    """
    cities = [
        ("–ú–æ—Å–∫–≤–∞", "Moscow"),
        ("–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", "Saint Petersburg"),
        ("–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫", "Novosibirsk"),
        ("–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", "Yekaterinburg"),
        ("–ö–∞–∑–∞–Ω—å", "Kazan"),
        ("–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥", "Nizhny Novgorod"),
        ("–ß–µ–ª—è–±–∏–Ω—Å–∫", "Chelyabinsk"),
        ("–°–∞–º–∞—Ä–∞", "Samara"),
        ("–¢–æ–∫–∏–æ", "Tokyo"),
        ("–ù—å—é-–ô–æ—Ä–∫", "New York"),
        ("–ú–∏–Ω—Å–∫", "Minsk"),
        ("–ö–∏–µ–≤", "Kyiv"),
        ("–ê—Å—Ç–∞–Ω–∞", "Astana"),
        ("–¢–∞—à–∫–µ–Ω—Ç", "Tashkent"),
    ]
    
    builder = InlineKeyboardBuilder()
    for text, city in cities:
        builder.button(text=text, callback_data=f"city_{city}")
    builder.button(text="üèôÔ∏è –î—Ä—É–≥–æ–π", callback_data="other")
    builder.button(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")
    builder.adjust(2)  # –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –¥–≤–∞ —Å—Ç–æ–ª–±—Ü–∞
    return builder.as_markup()

def back_menu():
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥".
    """
    builder = InlineKeyboardBuilder()
    builder.button(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")
    builder.adjust(1)
    return builder.as_markup()

def back_forecast():
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥".
    """
    builder = InlineKeyboardBuilder()
    builder.button(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="open_forecast_menu")
    builder.adjust(1)
    return builder.as_markup()

def close():
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–ó–∞–∫—Ä—ã—Ç—å".
    """
    builder = InlineKeyboardBuilder()
    builder.button(text="–ó–∞–∫—Ä—ã—Ç—å ‚ùå", callback_data="close")
    builder.adjust(1)
    return builder.as_markup()